[gd_scene load_steps=11 format=3 uid="uid://r2ihovciwhb4"]

[ext_resource type="Curve2D" uid="uid://cx8pv2yqlmbqy" path="res://resource/unit/utils/combat_unit_reference_walk_path.tres" id="2_sswhf"]

[sub_resource type="GDScript" id="GDScript_q42gf"]
script/source = "@tool
extends Node

signal finished()

@export_tool_button(\"Preview\", \"Callable\") var preview_animation = _preview
@export_tool_button(\"Stop Preview\", \"Stop\") var stop_preview = _stop_preview

@export_enum(\"normal\", \"fast\", \"slow\", \"very fast\", \"very slow\")
var walk_animation: String = \"normal\"

@export var moved_node: Node2D

@onready var animation_player: AnimationPlayer = %AnimationPlayer
@onready var path_follow: PathFollow2D = %PathFollow2D
@onready var path_2d: Path2D = %Path2D

func walk(action: CombatVisualUnitActionWalk) -> Signal:
	along_path(action.path)
	return finished

func along_path(path: Array[Vector2]):
	if path.is_empty():
		return
	var curve := Curve2D.new()
	for point in path:
		curve.add_point(point)
	along_curve(curve)

func along_curve(curve: Curve2D):
	if is_processing():
		stop()
	path_2d.curve = curve
	var path_len := curve.get_baked_length()
	var reference_len := UnitVisualsGlobal.reference_walk_path.get_baked_length()
	animation_player.animation_finished.connect(_handle_animation_finished)
	animation_player.play(
		animation_name_format % walk_animation, -1.0,
		reference_len / path_len
	)
	set_process(true)

func stop():
	if not is_processing():
		return
	set_process(false)
	animation_player.stop()
	animation_player.animation_finished.disconnect(_handle_animation_finished)

const animation_name_format := \"combat_unit_walk_presets/%s\"

func _ready() -> void:
	set_process(false)

func _process(delta: float) -> void:
	moved_node.position = path_follow.position

func _get_configuration_warnings() -> PackedStringArray:
	if moved_node == null:
		return [\"Moved node not assigned\"]
	return []

func _handle_animation_finished(_anim_name: String):
	stop()
	finished.emit()

func _preview():
	along_curve(UnitVisualsGlobal.reference_walk_path)

func _stop_preview():
	stop()
	_process(0.0)
	notify_property_list_changed()
"

[sub_resource type="Animation" id="Animation_ja20i"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_gotmv"]
_data = {
&"RESET": SubResource("Animation_ja20i")
}

[sub_resource type="Animation" id="Animation_8nyx4"]
resource_name = "normal"
length = 1.8
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.8),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="Animation_sswhf"]
resource_name = "normal"
length = 2.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 2.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="Animation_dtvl5"]
resource_name = "normal"
length = 3.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 3.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="Animation_fft4j"]
resource_name = "normal"
length = 1.25
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 2
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.25),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="Animation" id="Animation_82wbk"]
resource_name = "normal"
length = 6.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Path2D/PathFollow2D:progress_ratio")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/keys = {
"times": PackedFloat32Array(0, 6),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 1.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ja20i"]
_data = {
&"fast": SubResource("Animation_8nyx4"),
&"normal": SubResource("Animation_sswhf"),
&"slow": SubResource("Animation_dtvl5"),
&"very fast": SubResource("Animation_fft4j"),
&"very slow": SubResource("Animation_82wbk")
}

[node name="Walk" type="Node"]
script = SubResource("GDScript_q42gf")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
unique_name_in_owner = true
libraries = {
&"": SubResource("AnimationLibrary_gotmv"),
&"combat_unit_walk_presets": SubResource("AnimationLibrary_ja20i")
}

[node name="Path2D" type="Path2D" parent="."]
unique_name_in_owner = true
curve = ExtResource("2_sswhf")

[node name="PathFollow2D" type="PathFollow2D" parent="Path2D"]
unique_name_in_owner = true
position = Vector2(201.412, 0)
progress = 201.411
